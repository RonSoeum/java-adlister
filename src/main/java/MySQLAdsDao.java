import com.mysql.cj.jdbc.Driver;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class MySQLAdsDao implements Ads {

    private Connection connection = null;

    // Constructor: connect to a database
    public MySQLAdsDao(Config config) {
        try {
            // database driver that communicates with MySQL from this JAVA app
            DriverManager.registerDriver(new Driver());
            // connection object that represents a database connection
            // use the connection object to create statements
            connection = DriverManager.getConnection(
                    config.getUrl(),
                    config.getUser(),
                    config.getPassword()
            );
        } catch (SQLException e) {
            throw new RuntimeException("Error connecting to the database!", e);
        }
    }// MYSQLAdsDao

    @Override // List of all Ads
    public List<Ad> all() {
        try {
            // statement object that represents an individual SQL statement
            Statement stmt = connection.createStatement();
            // the result of running the SQL command
            ResultSet rs = stmt.executeQuery("SELECT * FROM ads");
            // returns a list of all ads on the database
            return createListOfAdsFromResults(rs);
        } catch (SQLException e) {
            throw new RuntimeException("Error retrieving all ads.", e);
        }
    }// all

    // SQL INSERT INTO Statement (for insert method)
    private String insertQuery (Ad ad) {
        return "INSERT INTO ads(user_id, title, description) VALUES ("
                    + ad.getUserId() + ", '"
                    + ad.getTitle() + "', '"
                    + ad.getDescription()
                    + "')";
    }// insertQuery

    // Insert new Ad into ads table
    @Override
    public Long insert(Ad ad) {
        try {
            Statement stmt = connection.createStatement();
            // The executeUpdate() method is used to insert, update, and delete rows in those tables.
            // The return value of executeUpdate() is an integer value that reports the number of rows affected by the SQL statement.
            // The Statement.RETURN_GENERATED_KEYS gives access to the ids that are autogenerated by the database when inserting a record.
            stmt.executeUpdate(insertQuery(ad), Statement.RETURN_GENERATED_KEYS);
            // The getGeneratedKeys() method gives a result set object that holds any ids that were generated by the database.
            ResultSet rs = stmt.getGeneratedKeys();
            // The next() method iterates to the next row in the results
            rs.next();
            // We'll use getLong to retrieve the generated id, and pass 1 to indicate that we want the first result in the result set.
            // Value can be retrieved from result set objects either by column name or column number (starting at 1).
            // Generally the column name is preferred, but in this case our result set contains a single value for each row, so we can access it with the 1.
            return rs.getLong(1);
        } catch (SQLException e) {
            throw new RuntimeException("Error creating a new ad.", e);
        }
    }// insert

    // extract an ad (row) from the ads table and convert it into an ad object
    private Ad extractAdFromDatabase(ResultSet rs) throws SQLException {
        // return instantiated Ad object
        return new Ad(
                rs.getLong("id"),
                rs.getLong("user_id"),
                rs.getString("title"),
                rs.getString("description")
        );
    }

    // create a list of ad objects from the ads table
    private List<Ad> createListOfAdsFromResults(ResultSet rs) throws SQLException {
        // initialize a list of ad objects
        List<Ad> ads = new ArrayList<>();
        // iterate through the results returned from the database
        while (rs.next()) {
            // add an ad object to the ads list
            ads.add(extractAdFromDatabase(rs));
        }
        // return the ads list
        return ads;
    }

}// class